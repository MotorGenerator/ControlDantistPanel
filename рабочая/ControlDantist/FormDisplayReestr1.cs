using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using ControlDantist.Classes;
using System.Linq;

using Microsoft.Office.Interop.Word;

using System.Globalization;
using System.Threading;


//ƒобавим DLL
using DantistLibrary;


namespace ControlDantist
{
    public partial class FormDisplayReestr : Form
    {
        private Dictionary<string, DisplayReestr> disp;
        private List<Unload> unload;

        private string _Ќомер–еестра = string.Empty;
        private string _Ќомер—чЄт‘актуры = string.Empty;
        private string _ƒата–еестра = string.Empty;
        private string _ƒата—чЄт‘актуры = string.Empty;

        private DataTable dtServ;
        private DataTable dtFile;

        //ѕеременна€ дл€ хранени€ количество актов
        private int countAct = 0;


        /// <summary>
        /// ƒата счЄт фактуры
        /// </summary>
        public string ƒата—чЄт‘актуры
        {
            get
            {
                return _ƒата—чЄт‘актуры;
            }
            set
            {
                _ƒата—чЄт‘актуры = value;
            }
        }


        /// <summary>
        /// Ќомер счЄт фактуры
        /// </summary>
        public string Ќомер—чЄт‘актуры
        {
            get
            {
                return _Ќомер—чЄт‘актуры;
            }
            set
            {
                _Ќомер—чЄт‘актуры = value;
            }
        }


        /// <summary>
        /// ƒата реестра
        /// </summary>
        public string ƒата–еестра
        {
            get
            {
                return _ƒата–еестра;
            }
            set
            {
                _ƒата–еестра = value;
            }
        }


        /// <summary>
        /// Ќомер реестра
        /// </summary>
        public string Ќомер–еестра
        {
            get
            {
                return _Ќомер–еестра;
            }
            set
            {
                _Ќомер–еестра = value;
            }
        }

        /// <summary>
        /// ’ранит выгрузку актов
        /// </summary>
        public List<Unload> Unloads
        {
            get
            {
                return unload;
            }
            set
            {
                unload = value;
            }
        }

        /// <summary>
        /// ’ранит Ѕиблиотеку актов выполненных работ
        /// </summary>
        public Dictionary<string, DisplayReestr> јкты–абот
        {
            get
            {
                return disp;
            }
            set
            {
                disp = value;
            }
        }

        public FormDisplayReestr()
        {
            InitializeComponent();
        }

        private void FormDisplayReestr_Load(object sender, EventArgs e)
        {
            CultureInfo newCInfo = (CultureInfo)Thread.CurrentThread.CurrentCulture.Clone();
            newCInfo.NumberFormat.NumberDecimalSeparator = ".";
            Thread.CurrentThread.CurrentCulture = newCInfo;

            //ѕрисвоим переменной countAct количество актов
            countAct = this.јкты–абот.Count;

            //List<DisplayReestr> list = new List<DisplayReestr>();
            List<DisplayReestrCheck> list = new List<DisplayReestrCheck>();

            //—умма контракта
             decimal sum–еестрјкт = 0.0m;

            //заполним данными коллекцию 
            foreach (DisplayReestr dr in this.јкты–абот.Values)
            {
                DisplayReestrCheck drck = new DisplayReestrCheck();

                /*если FlagError = true - значит по услугам ошибки нет
                 * если ErrorPerson = false то значит по персональным данным ошибки нет
                 * если FlagError = false - значит по услугам ошибка
                 * если ErrorPerson = true - то значит по персональным данным ошибка
                 */

                //ошибки нет не в услугах не в персональных данных
                if (dr.FlagError == true && dr.ErrorPerson == false)
                {
                    drck.FlagError = true;
                }

                //ошибка и в персональных данных и в услугах
                if (dr.FlagError == false && dr.ErrorPerson == true)
                {
                    drck.FlagError = false;
                }

                //
                if (dr.FlagError == true && dr.ErrorPerson == true)
                {
                    drck.FlagError = false;
                }

                if (dr.FlagError == false && dr.ErrorPerson == false)
                {
                    drck.FlagError = false;
                }
                
                //сумма оказываемых услуг
                //drck.Sum = dr.Sum.ToString("c");
                drck.Sum = Math.Round(dr.—уммаƒоговор—ервер,2).ToString("c");

                ReestrControl rck = dr.Ћьготник;
                drck.‘»ќ_Ћьготник = rck.‘»ќ;

                //разделим строку и получим отдельно номер договора и дату договора
                string[] srryƒатаЌомерƒоговор = rck.ƒатаЌомерƒоговора.Split(' ');

                //«апишем номер договора
                drck.Ќомерƒоговора = srryƒатаЌомерƒоговор[0];

                //получим дату договора
                drck.ƒатаƒоговора = srryƒатаЌомерƒоговор[1];

                //получим отдельно номер акта и дату акта
                string[] arryƒатаЌомерјкта = rck.Ќомерјктаќказанных”слуг.Split(' ');

                //получим номе акта 
                drck.Ќомерјкта = arryƒатаЌомерјкта[0];

                //получим дату акта
                drck.ƒатајкта =  arryƒатаЌомерјкта[1];

                drck.—писокќшибок = dr.—писокќшибок;

                //запишем сумму акта
                drck.—уммајкта = Math.Round(dr.—уммајкта¬ыполненных–абот,2).ToString("c");

                //укажем наличие доп соглашени€
                drck.FlagAddContract = dr.FlagAddContract;

                //drck.Ќомерјкта = rck.Ќомерјктаќказанных”слуг;
                list.Add(drck);

                //sum–еестрјкт = Math.Round(Math.Round(Math.Round(sum–еестрјкт, 2) + Math.Round(dr.—уммајкта¬ыполненных–абот, 2)), 2);
                sum–еестрјкт = Math.Round(Math.Round(sum–еестрјкт, 2) + Math.Round(dr.—уммајкта¬ыполненных–абот, 2), 2);
            }

            this.dataGridView1.DataSource = list;

            this.dataGridView1.Columns["Ќомерƒоговора"].HeaderText = "є договора";
            this.dataGridView1.Columns["Ќомерƒоговора"].DisplayIndex = 1;
            this.dataGridView1.Columns["Ќомерƒоговора"].Width = 100;
            this.dataGridView1.Columns["Ќомерƒоговора"].ReadOnly = true;

            this.dataGridView1.Columns["ƒатаƒоговора"].HeaderText = "дата договора";
            this.dataGridView1.Columns["ƒатаƒоговора"].DisplayIndex = 2;
            this.dataGridView1.Columns["ƒатаƒоговора"].Width = 80;
            this.dataGridView1.Columns["ƒатаƒоговора"].ReadOnly = true;

            this.dataGridView1.Columns["Sum"].HeaderText = "—умма договора";
            this.dataGridView1.Columns["Sum"].DisplayIndex = 3;
            this.dataGridView1.Columns["Sum"].Width = 80;
            this.dataGridView1.Columns["Sum"].ReadOnly = true;

           
             this.dataGridView1.Columns["Ќомерјкта"].HeaderText = "є акта";
             this.dataGridView1.Columns["Ќомерјкта"].DisplayIndex = 4;
             this.dataGridView1.Columns["Ќомерјкта"].Width = 100;
            this.dataGridView1.Columns["Ќомерјкта"].ReadOnly = true;

             this.dataGridView1.Columns["ƒатајкта"].HeaderText = "дата акта";
             this.dataGridView1.Columns["ƒатајкта"].DisplayIndex = 5;
             this.dataGridView1.Columns["ƒатајкта"].Width = 80;
            this.dataGridView1.Columns["ƒатајкта"].ReadOnly = true;

            this.dataGridView1.Columns["—уммајкта"].HeaderText = "—умма акта";
            this.dataGridView1.Columns["—уммајкта"].DisplayIndex = 6;
            this.dataGridView1.Columns["—уммајкта"].Width = 100;
            this.dataGridView1.Columns["—уммајкта"].ReadOnly = true;

             this.dataGridView1.Columns["‘»ќ_Ћьготник"].HeaderText = "‘»ќ";
             this.dataGridView1.Columns["‘»ќ_Ћьготник"].DisplayIndex = 0;
             this.dataGridView1.Columns["‘»ќ_Ћьготник"].Width = 200;
            this.dataGridView1.Columns["‘»ќ_Ћьготник"].ReadOnly = true;

             this.dataGridView1.Columns["FlagError"].HeaderText = "–езультат проверки";
             this.dataGridView1.Columns["FlagError"].DisplayIndex = 7;
             this.dataGridView1.Columns["FlagError"].Width = 100;

          
            //ќткроем дл€ редактировани€
             this.dataGridView1.Columns["FlagError"].ReadOnly = false;

             this.dataGridView1.Columns["FlagAddContract"].HeaderText = "Ќаличие доп. соглашени€";
             this.dataGridView1.Columns["FlagAddContract"].DisplayIndex = 8;
             this.dataGridView1.Columns["FlagAddContract"].Width = 100;
             this.dataGridView1.Columns["FlagAddContract"].ReadOnly = true;

            //ѕройдЄмс€ по DataGrid и псочитаем суммы договоров и суммы актов
             decimal sum–еестрƒог = 0.0m;

            

             if (this.dataGridView1.Rows.Count != 0)
             {

                 //foreach (DataGridViewRow row in this.dataGridView1.Rows)
                 //{
                 //   //ѕодсчитаем сумму реестра выполненных договоров (—умму актов)
                 //    string s1 = row.Cells["—уммајкта"].Value.ToString();
                 //    string sum1 = s1.Replace("р.", " ");

                 //    string summ1 = sum1.Replace(',', '.');
                 //    sum–еестрјкт = Math.Round(Math.Round(Math.Round(sum–еестрјкт, 2) + Math.Round(Convert.ToDecimal(summ1),2)),2);
                 //    //}
                 //}

             }

             //this.labelServ.Text  = "—умма реестра актов " + sum–еестрƒог.ToString("c");
             this.labelFile.Text = "—умма реестра выполненных договоров " + Math.Round(sum–еестрјкт,2).ToString("c");
            


        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            //обнулим таблицы 
            this.dataGridView2.DataSource = null;

            //отобразим правильные данные
            this.dataGridView3.DataSource = null;

            //получим номер договора
            string Ќомерјкта = this.dataGridView1.CurrentRow.Cells["Ќомерјкта"].Value.ToString().Trim();

            if (this.јкты–абот.ContainsKey(Ќомерјкта))
            {
                //this.iv = ¬ыгрузкаѕроектƒоговоров[numberDog.Trim()];
                DisplayReestr dr = this.јкты–абот[Ќомерјкта];

                if (dr.ErrorPerson == true)
                {
                   // MessageBox.Show("»зменены данные о льготнике");
                    MyMessage message = new MyMessage();
                    message.ShowDialog();

                    //ѕеременные дл€ хранени€ данных с сервера и из файла выгрузки
                   

                    if (message.DialogResult == System.Windows.Forms.DialogResult.OK)
                    {

                        //ѕолучим id льготника
                        string номерƒоговора = this.dataGridView1.CurrentRow.Cells["Ќомерƒоговора"].Value.ToString().Trim();

                        //получим ‘»ќ льготника
                        string фио = this.dataGridView1.CurrentRow.Cells["‘»ќ_Ћьготник"].Value.ToString().Trim();

                        string queryЋьготник = "select * from Ћьготник " +
                                               "where id_льготник in ( " +
                                               "select id_льготник from ƒоговор where Ќомерƒоговора = '" + номерƒоговора + "') ";

                        //ѕолучим данные по льготнику которые хран€тьс€ у нас на сервере
                        dtServ = “аблицаЅƒ.GetTableSQL(queryЋьготник, "Ћьготник");

                        //фамилию
                        string[] фамили€ = фио.Split(' ');
                        

                        //получим данные из файла
                        //IEnumerable<Unload> un = this.Unloads.Where(u => u.Ћьготник.Rows[0]["‘амили€"] == "јгафонова").Select(u=>u);
                        IEnumerable<Unload> un = this.Unloads.Where(u => u.Ћьготник.Rows[0]["‘амили€"].ToString() == фамили€[0].Trim()).Select(u => u);

                        //List<Unload> list = new List<Unload>();
                        foreach (Unload u in un)
                        {
                            //list.Add(u);
                            dtFile = u.Ћьготник;
                        }

                        FormDisplayError ferr = new FormDisplayError();
                        ferr.DtServer = dtServ;
                        ferr.DtFile = dtFile;
                        ferr.ShowDialog();
                    }
                    else
                    {
                        message.Close();
                    }

                    //DataTable adtServ = dtServ;
                    //DataTable adtFile = dtFile;

                    //FormDisplayError ferr = new FormDisplayError();
                    //ferr.DtServer = dtServ;
                    //ferr.DtFile = dtFile;
                    //ferr.ShowDialog();
                    
                }

                if (dr.—писокќшибок != null)
                {
                    List<ErrorsReestrUnload> listError = dr.—писокќшибок;

                    //список дл€ хранени€ корректных данных
                    List<DateService> listCorrect = new List<DateService>();

                    //—писок дл€ хранени€ ошибочных данных
                    List<DateService> listErrorD = new List<DateService>();


                    //формируем список ошибок и список реальных данных
                    foreach (ErrorsReestrUnload list in listError)
                    {
                        if (list.Ќаименование”слуги != null)
                        {
                            if (list.Ќаименование”слуги.Length != 0)
                            {
                                //запишем правильные данные
                                DateService correct = new DateService();
                                correct.Ќаименование = list.Ќаименование”слуги;

                                correct.—умма = list.—умма.ToString("c");
                                correct. оличество = list. оличество.ToString().Trim();

                                correct.÷ена = list.÷ена.ToString("c");

                                //добавим класс в коллекцию
                                listCorrect.Add(correct);
                            }
                        }

                        if (list.ErrorЌаименование”слуги != null)
                        {
                            if (list.ErrorЌаименование”слуги.Length != 0)
                            {
                                //запишем ошибочные данные
                                DateService error = new DateService();
                                error.Ќаименование = list.ErrorЌаименование”слуги;
                                error.—умма = list.Error—умма.ToString("c");

                                error. оличество = list.ќшибка оличество.ToString().Trim();

                                error.÷ена = list.Error÷ена.ToString("c");
                                listErrorD.Add(error);
                            }
                        }


                    }

                    //отобразим ошибочные данные
                    this.dataGridView2.DataSource = listErrorD;

                    this.dataGridView2.Columns["Ќаименование"].HeaderText = "Ќаименование";
                    this.dataGridView2.Columns["Ќаименование"].DisplayIndex = 0;
                    //this.dataGridView2.Columns[" оличество"].Width = 100;
                    this.dataGridView2.Columns["Ќаименование"].ReadOnly = true;

                    this.dataGridView2.Columns["÷ена"].HeaderText = "÷ена";
                    this.dataGridView2.Columns["÷ена"].DisplayIndex = 1;
                    //this.dataGridView2.Columns[" оличество"].Width = 100;
                    this.dataGridView2.Columns["÷ена"].ReadOnly = true;

                    this.dataGridView2.Columns[" оличество"].HeaderText = " ол-во";
                    this.dataGridView2.Columns[" оличество"].DisplayIndex = 2;
                    this.dataGridView2.Columns[" оличество"].Width = 50;
                    this.dataGridView2.Columns[" оличество"].ReadOnly = true;

                    this.dataGridView2.Columns["—умма"].HeaderText = "—умма";
                    this.dataGridView2.Columns["—умма"].DisplayIndex = 3;
                    //this.dataGridView2.Columns[" оличество"].Width = 100;
                    this.dataGridView2.Columns["—умма"].ReadOnly = true;



                    if (listCorrect.Count != 0)
                    {
                        //отобразим правильные данные
                        this.dataGridView3.DataSource = listCorrect;

                        this.dataGridView3.Columns["Ќаименование"].HeaderText = "Ќаименование";
                        this.dataGridView3.Columns["Ќаименование"].DisplayIndex = 0;
                        //this.dataGridView2.Columns[" оличество"].Width = 100;
                        this.dataGridView3.Columns["Ќаименование"].ReadOnly = true;

                        this.dataGridView3.Columns["÷ена"].HeaderText = "÷ена";
                        this.dataGridView3.Columns["÷ена"].DisplayIndex = 1;
                        //this.dataGridView3.Columns[" оличество"].Width = 100;
                        this.dataGridView3.Columns["÷ена"].ReadOnly = true;

                        this.dataGridView3.Columns[" оличество"].HeaderText = " ол-во";
                        this.dataGridView3.Columns[" оличество"].DisplayIndex = 2;
                        this.dataGridView3.Columns[" оличество"].Width = 50;
                        this.dataGridView3.Columns[" оличество"].ReadOnly = true;

                        this.dataGridView3.Columns["—умма"].HeaderText = "—умма";
                        this.dataGridView3.Columns["—умма"].DisplayIndex = 3;
                        //this.dataGridView2.Columns[" оличество"].Width = 100;
                        this.dataGridView3.Columns["—умма"].ReadOnly = true;
                    }
                }


            }


            //получим данные о текущем акте
            //DisplayReestr dr =  this.јкты–абот[Ќомерƒоговора]
        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            //ѕройдЄмс€ по DataGridy и запишем в Ѕƒ только те договора у которых стоит флаг
            List<DisplayReestrCheck> list = new List<DisplayReestrCheck>();
            List<Unload> unload = this.Unloads;

            string logTest = MyAplicationIdentity.GetUses();
          

             // ѕроверим все ли договора в реестре прошли проверку



            //int countContracts = this.јкты–абот.Count;- не работает
            int countContracts = countAct;
            
            //счЄтчик количесва договоров прошедших проверку
            int countD = 0;

            //пройдЄмс€ по DataGridView и узнаем все ли договора прошли проверку если они прошли все то можно записывать в Ѕƒ
            foreach (DataGridViewRow row in this.dataGridView1.Rows)
            {

                //”знаем сколько договоров прошли проверку
                //string номƒого = un.ƒоговор.Rows[0]["Ќомерƒоговора"].ToString().Trim();
                bool fl = Convert.ToBoolean(row.Cells["FlagError"].Value);

                string sumContrControl = row.Cells["Sum"].Value.ToString().Trim();




                if (fl == true && sumContrControl != "0,00р.")
                {
                    countD++;
                }
            }

            //сравним количество договоров
            if (countContracts == countD)
            {


                //FormReestr formR = new FormReestr();
                //formR.ShowDialog();

                //if (formR.DialogResult == DialogResult.OK)
                //{

                    //получим номер реестра
                string numReestr = this.Ќомер–еестра;// formR.Ќомер–еестра;

                    //получим дату реестра
                string dateReestr = this.ƒата–еестра;// formR.ƒата–еестра;

                    //получим номер счЄт-фактуры
                string num_счЄт‘актуры = this.Ќомер—чЄт‘актуры;// formR.Ќомер—чЄт‘актуры;

                    //получим дату счЄт фактуры
                string date_—чЄт‘актуры = this.ƒата—чЄт‘актуры;// formR.ƒата—чЄт‘актуры;

                    foreach (DataGridViewRow row in this.dataGridView1.Rows)
                    {
                        //”становим русскую культуру
                        CultureInfo newCInfo = (CultureInfo)Thread.CurrentThread.CurrentCulture.Clone();
                        newCInfo.NumberFormat.NumberDecimalSeparator = ".";
                        Thread.CurrentThread.CurrentCulture = newCInfo;

                        //получим номер јкта
                        string numDog = row.Cells["Ќомерƒоговора"].Value.ToString().Trim();


                        //получим флаг который стоит в DataGridView 
                        bool flag = Convert.ToBoolean(row.Cells["FlagError"].Value);

                        //row.Cells["Ќомерјкта"].Value
                        //row.Cells["Ќомерƒоговора"].Value
                        //DisplayReestr act = this.јкты–абот[keyAct];

                        //получим нужный нам договор и акт выгрузки
                        foreach (Unload un in this.Unloads)
                        {
                            //ЌайдЄм номер договора который соответсвует помеченному как прошедший проверку
                            string номерƒоговора = un.ƒоговор.Rows[0]["Ќомерƒоговора"].ToString().Trim();
                            if (numDog == номерƒоговора && flag == true)
                            {
                               
                                //получим договор который закрываетс€ текушим актом
                                DataRow rowDog = un.ƒоговор.Rows[0];

                                //ѕолучим id договора текущего договора
                                string query = "select * from dbo.ƒоговор " +
                                               "where Ќомерƒоговора = '" + номерƒоговора + "' and ‘лагѕроверки = 'True' ";

                                DataTable tabID;

                                using (SqlConnection con = new SqlConnection(ConnectDB.ConnectionString()))
                                {
                                    con.Open();

                                    //¬ыполним всЄ в единой транзакции
                                    SqlTransaction transact = con.BeginTransaction();
                                    tabID = “аблицаЅƒ.GetTableSQL(query, "ƒоговор", con, transact);
                                }

                                //ѕолучим id договора которое у нас на сервере  id льготной категории
                                int id_договор = 0;

                                int id_льготной атегории = 0;
                                if (tabID.Rows.Count != 0)
                                {
                                    id_договор = Convert.ToInt32(tabID.Rows[0]["id_договор"]);
                                    id_льготной атегории = Convert.ToInt32(tabID.Rows[0]["id_льготна€ атегори€"]);
                                }

                                //всатвим дату договора
                                string датаƒоговора = Convert.ToDateTime(rowDog["ƒатаƒоговора"]).ToShortDateString();

                                DataTable табјкт = un.јкт¬ыполненных–абот;
                                string датајкта = Convert.ToDateTime(табјкт.Rows[0]["ƒатаѕодписани€"]).ToShortDateString();

                                decimal sumDog = 0.0m;

                                //получим сумму акта выполненных работ
                                DataTable tab”слугиƒоговор = un.”слугиѕоƒоговору;

                                foreach (DataRow rowƒог in tab”слугиƒоговор.Rows)
                                {
                                    sumDog = Math.Round(sumDog + Convert.ToDecimal(rowƒог["—умма"]), 2);
                                }

                                decimal summ = sumDog;

                                //ѕолучим данные по акту выполненных работ
                                DataTable tabAct = un.јкт¬ыполненных–абот;



                                //ѕроверим существует ли указанный јкт выполненных работ на сервере
                                string countRow = "select COUNT(Ќомерјкта) as ' оличество' from dbo.јкт¬ыполненных–абот " +
                                                  "where Ќомерјкта = '" + tabAct.Rows[0]["Ќомерјкта"].ToString().Trim() + "' ";

                                DataTable tab;
                                using (SqlConnection con = new SqlConnection(ConnectDB.ConnectionString()))
                                {
                                    con.Open();

                                    //¬ыполним всЄ в единой транзакции
                                    SqlTransaction transact = con.BeginTransaction();
                                    tab = “аблицаЅƒ.GetTableSQL(countRow, "јкт—ервер", con, transact);
                                }

                                if (Convert.ToInt32(tab.Rows[0][" оличество"]) == 0)
                                {

                                    StringBuilder builder = new StringBuilder();

                                    DataRow rowЋьгот = un.Ћьготник.Rows[0];

                                    //ќбновим записи в таблице по льготнику
                                    string updateLgot = " UPDATE [Ћьготник] " +
                                                        "SET [‘амили€] = '" + rowЋьгот["‘амили€"].ToString().Trim() + "' " +
                                                        ",[»м€] = '" + rowЋьгот["»м€"].ToString().Trim() + "' " +
                                                        ",[ќтчество] = '" + rowЋьгот["ќтчество"].ToString().Trim() + "' " +
                                                        ",[ƒата–ождени€] = '" + rowЋьгот["ƒата–ождени€"].ToString().Trim() + "' " +
                                                        ",[улица] = '" + rowЋьгот["улица"].ToString().Trim() + "' " +
                                                        ",[Ќомерƒома] = '" + rowЋьгот["Ќомерƒома"].ToString().Trim() + "' " +
                                                        ",[корпус] = '" + rowЋьгот["корпус"].ToString().Trim() + "' " +
                                                        ",[Ќомер вартиры] = '" + rowЋьгот["Ќомер вартиры"].ToString().Trim() + "' " +
                                                        ",[—ери€ѕаспорта] = '" + rowЋьгот["—ери€ѕаспорта"].ToString().Trim() + "' " +
                                                        ",[Ќомерѕаспорта] = '" + rowЋьгот["Ќомерѕаспорта"].ToString().Trim() + "' " +
                                                        ",[ƒата¬ыдачиѕаспорта] = '" + rowЋьгот["ƒата¬ыдачиѕаспорта"].ToString().Trim() + "' " +
                                                        ",[ ем¬ыданѕаспорт] = '" + rowЋьгот[" ем¬ыданѕаспорт"].ToString().Trim() + "' " +
                                                        ",[id_льготной атегории] = " + id_льготной атегории + " " +
                                                        ",[id_документ] = " + Convert.ToInt32(rowЋьгот["id_документ"]) + " " +
                                                        ",[—ери€ƒокумента] = '" + rowЋьгот["—ери€ƒокумента"].ToString().Trim() + "' " +
                                                        ",[Ќомерƒокумента] = '" + rowЋьгот["Ќомерƒокумента"].ToString().Trim() + "' " +
                                                        ",[ƒата¬ыдачиƒокумента] = '" + rowЋьгот["ƒата¬ыдачиƒокумента"].ToString().Trim() + "' " +
                                                        ",[ ем¬ыданƒокумент] = '" + rowЋьгот[" ем¬ыданƒокумент"].ToString().Trim() + "' " +
                                                        //",[id_область] = " + Convert.ToInt32(rowЋьгот["id_область"]) + " " +
                                                        //",[id_район] = " + Convert.ToInt32(rowЋьгот["id_район"]) + " " +
                                                        //",[id_насѕункт] = " + Convert.ToInt32(rowЋьгот["id_насѕункт"]) + " " +
                                                        "where id_льготник = ( " +
                                                        "select id_льготник from dbo.ƒоговор " +
                                                        "where id_договор = " + id_договор + ") ";

                                    builder.Append(updateLgot);

                                    //внесЄм изменени€ в таблицу договор
                                    string updateQuery = "declare @id int " +
                                           "select @id = id_льготной атегории from dbo.Ћьготна€ атегори€ " +
                                           "where Ћьготна€ атегори€ = '" + un.Ћьготна€ атегори€ + "' " +
                                           "UPDATE [ƒоговор] " +
                                           "SET [ƒатаƒоговора] = '" + датаƒоговора.Trim() + "' " +
                                           ",[ƒатајкта¬ыполненных–абот] = '" + датајкта.Trim() + "' " +
                                           ",—уммајкта¬ыполненных–абот = " + summ + " " +
                                        //",id_льготна€ атегори€ = @id " + id_льготной атегории
                                            ",id_льготна€ атегори€ = " + id_льготной атегории + " " +
                                           ",‘лагЌаличи€ƒоговора = 'True' " +
                                           ",‘лагЌаличи€јкта = 'True' " +
                                           //",ƒата«аписиƒоговора = '"+ DateTime.Today +"' " + // не будем замн€ть дату
                                           ",[Ќомер–еестра] = '" + numReestr + "' " +
                                           ",[ƒата–еестра] = '" + dateReestr + "' " +
                                           ",[Ќомер—чЄт‘актрура] = '" + num_счЄт‘актуры + "' " +
                                           ",[ƒата—чЄт‘актура] = '" + date_—чЄт‘актуры + "' " +
                                           "WHERE id_договор = " + id_договор + " ";

                                    builder.Append(updateQuery);

                                    /*
                                     * ѕредположем, что если пользоватьель проставил флаг, что акт прошЄл проверку
                                     * значит мы соглашаемс€ с видами работ указанными в данном акте.
                                     * ƒл€ этого мы удал€ем все виды работ указанные дл€ текущего акта и записываем новые данные
                                     * из файла.
                                     * */

                                    string queryDelete = "delete ”слугиѕоƒоговору " +
                                                         "where id_договор = " + id_договор + " ";

                                    builder.Append(queryDelete);

                                    //счЄтчик циклов
                                    int iCount = 0;

                                    //запишем новые услуги
                                    foreach(DataRow rowU in un.”слугиѕоƒоговору.Rows)
                                    {
                                        string queryInsert”слуги = "declare @idƒоговор_" + iCount + " int " +
                                                  //"select @idƒоговор_" + iCount + " = id_договор from dbo.ƒоговор where Ќомерƒоговора = '" + номерƒоговора + "' " +
                                                  "select @idƒоговор_" + iCount + " = id_договор from dbo.ƒоговор where Ќомерƒоговора = '" + номерƒоговора + "' and ‘лагѕроверки = 'True' " +
                                                  "INSERT INTO ”слугиѕоƒоговору " +
                                                  "([Ќаименование”слуги] " +
                                                  ",[цена] " +
                                                  ",[ оличество] " +
                                                  ",[id_договор] " +
                                                  ",[Ќомерѕоѕеречню] " +
                                                  ",[—умма] " +
                                                  ",[“ехЋист]) " +
                                                  "VALUES " +
                                                   "('" + rowU["Ќаименование”слуги"].ToString() + "' " +
                                                   "," + Convert.ToDecimal(rowU["÷ена"]) + " " +
                                                   "," + Convert.ToInt32(rowU[" оличество"]) + " " +
                                                   ",@idƒоговор_" + iCount + " " +
                                                   ",'" + rowU["Ќомерѕоѕеречню"].ToString() + "' " +
                                                   "," + Convert.ToDecimal(rowU["—умма"]) + " " +
                                                   "," + Convert.ToInt32(rowU[" оличество"]) + " ) ";

                                        builder.Append(queryInsert”слуги);

                                        iCount++;
                                    }


                                    try
                                    {

                                        string insertAct = "INSERT INTO [јкт¬ыполненных–абот] " +
                                                           "([Ќомерјкта] " +
                                                           ",[id_договор] " +
                                                           ",[‘лагѕодписани€] " +
                                                           ",[ƒатаѕодписани€] " +
                                                           ",[Ќомерѕоѕеречню] " +
                                                           ",[Ќаименование”слуги] " +
                                                           ",[÷ена] " +
                                                           ",[ оличество] " +
                                                           ",[—умма] " +
                                                           ",[‘лагƒоп—оглашение] " +
                                                           ",[Ќомер–еестра] " +
                                                           ",[ƒата–еестра] " +
                                                           ",[Ќомер—чЄт‘актуры] " +
                                                           ",[ƒата—чЄт‘актуры] " +
                                                           ",[ƒатаќплаты] ) " +
                                                           "VALUES " +
                                                           "('" + tabAct.Rows[0]["Ќомерјкта"].ToString().Trim() + "' " +
                                                           "," + id_договор + " " +
                                                           ",'" + tabAct.Rows[0]["‘лагѕодписани€"].ToString().Trim() + "' " +
                                                           ",'" + датајкта.Trim() + "' " +
                                                           ",'" + tabAct.Rows[0]["Ќомерѕоѕеречню"].ToString().Trim() + "' " +
                                                           ",'" + tabAct.Rows[0]["Ќаименование”слуги"].ToString().Trim() + "' " +
                                                           ",'" + tabAct.Rows[0]["÷ена"].ToString().Trim() + "' " +
                                                           "," + Convert.ToInt32(tabAct.Rows[0][" оличество"]) + " " +
                                                           ",'" + tabAct.Rows[0]["—умма"].ToString().Trim() + "' " +
                                                           ",'" + tabAct.Rows[0]["‘лагƒоп—оглашение"].ToString().Trim() + "' " +
                                                           ", '" + this.Ќомер–еестра.ToString().Trim() + "' " +
                                                           ", '" + this.ƒата–еестра + "' " +
                                                           ",'" + this.Ќомер—чЄт‘актуры.ToString().Trim() + "' " +
                                                           ", '" + this.ƒата—чЄт‘актуры + "' " +
                                                           ", '' ) ";


                                        builder.Append(insertAct);

                                        //¬ыполним запрос в единой транзакции
                                        ExecuteQuery.Execute(builder.ToString());
                                        break;

                                    }
                                    catch
                                    {
                                        MessageBox.Show("«аполнены не все пол€");
                                        return;
                                    }
                                }
                                else
                                {
                                    MessageBox.Show("јкт є " + tabAct.Rows[0]["Ќомерјкта"].ToString().Trim() + " уже записан в базе данных");
                                }

                                //}

                                //запишем на сервер данные по акту выполненных работ

                            }
                        }
                    }

                    if (this.Ќомер–еестра != "" && this.Ќомер—чЄт‘актуры != "" && this.ƒата–еестра != "" && this.ƒата—чЄт‘актуры != "")
                    {
                        this.btnSlRead.Enabled = true;
                        this.btnReturnReestr.Enabled = true;
                    }

                    //«акроем форму
                    this.Close();
               // }

                //if (formR.DialogResult == DialogResult.No)
                //{
                //    formR.Close();
                //}
            }
            else
            {
                MessageBox.Show("–еестр не прошЄл проверку");
            }



        }

        private void btnSlRead_Click(object sender, EventArgs e)
        {
            //”становим русскую культуру
            CultureInfo newCInfo = (CultureInfo)Thread.CurrentThread.CurrentCulture.Clone();
            newCInfo.NumberFormat.NumberDecimalSeparator = ".";
            Thread.CurrentThread.CurrentCulture = newCInfo;


            //ѕолучим наименование стоматологической поликлинники
            DataTable tabHosp = this.Unloads[0].ѕоликлинника;
            string hosp = tabHosp.Rows[0]["Ќаименованиеѕоликлинники"].ToString().Trim();

            //ѕолучим наименование льготной категории
            string льгот атегори€ = this.Unloads[0].Ћьготна€ атегори€.Trim();

            DataTable tabЌачальник;

            //получим текущего начальника отдела автоматизации
            string queryЌачальник = "select должность,фамили€,инициалы from ƒолжностьјналитич”прав " +
                                    "where id_должность = (select id_должность from dbo.ѕодписьƒолжность) ";

            using(SqlConnection con = new SqlConnection(ConnectDB.ConnectionString()))
            {
                con.Open();
                SqlTransaction transact= con.BeginTransaction();
                
                tabЌачальник = “аблицаЅƒ.GetTableSQL(queryЌачальник,"ƒолжность",con,transact);

            }

            //try
            //{

                //ѕолучим должность начальника отдела
                string dolzhnost = tabЌачальник.Rows[0]["должность"].ToString().Trim();

                //получим ‘»ќ начальника отдела
                string familija = tabЌачальник.Rows[0]["фамили€"].ToString().Trim();

                //ѕолучим инициалы
                string inicialy = tabЌачальник.Rows[0]["инициалы"].ToString().Trim();


                //—чЄтчик договоров
                int iCountContr = 0;

                decimal mani = 0.0m;

                //ѕодсчитаем количество договоров
                foreach (DataGridViewRow row in this.dataGridView1.Rows)
                {
                    if (Convert.ToBoolean(row.Cells["FlagError"].Value) == true)
                    {
                        iCountContr++;

                        //ѕодсчитаем сумму реестра выполненных договоров (—умму актов)
                        string s1 = row.Cells["—уммајкта"].Value.ToString();
                        string sum1 = s1.Replace("р.", " ");

                        string summ1 = sum1.Replace(',', '.');
                        mani = Math.Round(Math.Round(mani, 2) + Math.Round(Convert.ToDecimal(summ1), 2), 2);
                    }
                }

                //≈щЄ нужно получить ‘»ќ начальника информационно-аналитического управлекни€


                //–аспечатаем служебную записку
                string filName = System.Windows.Forms.Application.StartupPath + @"\Ўаблон\Ўаблон служебной записки на оплату.doc";


                //—оздаЄм новый Word.Application
                Microsoft.Office.Interop.Word.Application app = new Microsoft.Office.Interop.Word.Application();

                //«агружаем документ
                Microsoft.Office.Interop.Word.Document doc = null;

                object fileName = filName;
                object falseValue = false;
                object trueValue = true;
                object missing = Type.Missing;

                doc = app.Documents.Open(ref fileName, ref missing, ref trueValue,
                ref missing, ref missing, ref missing, ref missing, ref missing,
                ref missing, ref missing, ref missing, ref missing, ref missing,
                ref missing, ref missing, ref missing);

                ////запишем фио
                //object wdrepl2 = WdReplace.wdReplaceAll;
                ////object searchtxt = "GreetingLine";
                //object searchtxt2 = "fio";
                //object newtxt2 = (object)fio;
                ////object frwd = true;
                //object frwd2 = false;
                //doc.Content.Find.Execute(ref searchtxt2, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd2, ref missing, ref missing, ref newtxt2, ref wdrepl2, ref missing, ref missing,
                //ref missing, ref missing);

                //запишем фио
                object wdrepl2 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt2 = "поликлинника";
                object newtxt2 = (object)hosp;
                //object frwd = true;
                object frwd2 = false;
                doc.Content.Find.Execute(ref searchtxt2, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd2, ref missing, ref missing, ref newtxt2, ref wdrepl2, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl3 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt3 = "льготкатегори€";
                object newtxt3 = (object)льгот атегори€;
                //object frwd = true;
                object frwd3 = false;
                doc.Content.Find.Execute(ref searchtxt3, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd3, ref missing, ref missing, ref newtxt3, ref wdrepl3, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl4 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt4 = "количество";
                object newtxt4 = (object)iCountContr;
                //object frwd = true;
                object frwd4 = false;
                doc.Content.Find.Execute(ref searchtxt4, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd4, ref missing, ref missing, ref newtxt4, ref wdrepl4, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl5 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt5 = "mani";
                object newtxt5 = (object)mani;
                //object frwd = true;
                object frwd5 = false;
                doc.Content.Find.Execute(ref searchtxt5, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd5, ref missing, ref missing, ref newtxt5, ref wdrepl5, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl6 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt6 = "familija";
                object newtxt6 = (object)familija;
                //object frwd = true;
                object frwd6 = false;
                doc.Content.Find.Execute(ref searchtxt6, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd6, ref missing, ref missing, ref newtxt6, ref wdrepl6, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl7 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt7 = "dolzhnost";
                object newtxt7 = (object)dolzhnost;
                //object frwd = true;
                object frwd7 = false;
                doc.Content.Find.Execute(ref searchtxt7, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd7, ref missing, ref missing, ref newtxt7, ref wdrepl7, ref missing, ref missing,
                ref missing, ref missing);

                object wdrepl8 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt8 = "inicialy";
                object newtxt8 = (object)inicialy;
                //object frwd = true;
                object frwd8 = false;
                doc.Content.Find.Execute(ref searchtxt8, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd8, ref missing, ref missing, ref newtxt8, ref wdrepl8, ref missing, ref missing,
                ref missing, ref missing);


                object wdrepl9 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt9 = "num";
                object newtxt9 = (object)this.Ќомер—чЄт‘актуры.Trim();
                //object frwd = true;
                object frwd9 = false;
                doc.Content.Find.Execute(ref searchtxt9, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd9, ref missing, ref missing, ref newtxt9, ref wdrepl9, ref missing, ref missing,
                ref missing, ref missing);


                object wdrepl10 = WdReplace.wdReplaceAll;
                //object searchtxt = "GreetingLine";
                object searchtxt10 = "date";
                object newtxt10 = (object)this.ƒата—чЄт‘актуры.Trim();
                //object frwd = true;
                object frwd10 = false;
                doc.Content.Find.Execute(ref searchtxt10, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd10, ref missing, ref missing, ref newtxt10, ref wdrepl10, ref missing, ref missing,
                ref missing, ref missing);

                //ќтобразим документ
                app.Visible = true;
            //}
            //catch (IndexOutOfRangeException i)
            //{
            //    MessageBox.Show("¬озможно ¬ы не выбрали начальника аналитического отдела");
            //}

        }

        private void btnReturnReestr_Click(object sender, EventArgs e)
        {
            //—охраним копию списка актов работ
            Dictionary<string, DisplayReestr> listјкт = this.јкты–абот;

            List<string> номерајктов = new List<string>();
            //¬ыберим не помеченные акты
            //ѕодсчитаем количество договоров
            foreach (DataGridViewRow row in this.dataGridView1.Rows)
            {
                if (Convert.ToBoolean(row.Cells["FlagError"].Value) == false && (Convert.ToBoolean(row.Cells["FlagAddContract"].Value) == false))
                {
                    номерајктов.Add(row.Cells["Ќомерјкта"].Value.ToString().Trim());

                    
                }
                else
                {
                    //полчим номер акта
                    string keyAkt = row.Cells["Ќомерјкта"].Value.ToString();
                    listјкт.Remove(keyAkt);

                }
            }

            //—писок хранит недостатки по всем актам в текущем реестре
            List<DisplayReestr> listReestr = new List<DisplayReestr>();

            //ѕроходим по актам и находим в них ошибки которые нам нужно отобразить
            //foreach (string drKey in this.јкты–абот.Keys)
            foreach (string drKey in listјкт.Keys)
            {
                foreach (string sNUm in номерајктов)
                {
                    if (drKey == sNUm)
                    {
                        DisplayReestr dr = this.јкты–абот[drKey];
                        //dr.Ќомерјкта = drKey;
                        listReestr.Add(dr);
                    }
                }
            }

            List<DisplayReestr> iListReestr = listReestr;

            //”знаем кака€ у нас поликлинника
            DataRow rowѕоликлинника = this.Unloads[0].ѕоликлинника.Rows[0];
            string инн = rowѕоликлинника["»ЌЌ"].ToString().Trim();

            string queryHosp = "SELECT [F2],[F3],[‘»ќ] " +
                               "FROM Ћист1$ " +
                               "where id in ( " +
                               "SELECT [id_поликлинника] " +
                               "FROM ѕоликлинника " +
                               "where »ЌЌ = '" + инн + "' )";
            
            string кому = string.Empty;
            string obrashhenie = string.Empty;
            string esculap = string.Empty;

            SqlConnection con = new SqlConnection(ConnectDB.ConnectionString());
            con.Open();
            SqlDataAdapter da = new SqlDataAdapter(queryHosp, con);
            DataSet ds = new DataSet();
            da.Fill(ds, "Ћист1$");

            //DataTable tabЌачальник = “аблицаЅƒ.GetTableSQL(queryHosp, " ому", con, transact);
            кому = ds.Tables["Ћист1$"].Rows[0]["F2"].ToString().Trim();// +" " + ds.Tables["Ћист1$"].Rows[0]["‘»ќ"].ToString().Trim();
            obrashhenie = ds.Tables["Ћист1$"].Rows[0]["F3"].ToString().Trim();
            esculap = ds.Tables["Ћист1$"].Rows[0]["‘»ќ"].ToString().Trim();

            //подсчитаем количество договоров указанныхз в реестре
            //—чЄтчик договоров
            int iCountContr = 0;

            //ѕодсчитаем количество договоров
            foreach (DataGridViewRow row in this.dataGridView1.Rows)
            {
                if (Convert.ToBoolean(row.Cells["FlagError"].Value) == false)
                {
                    iCountContr++;
                }
            }

            //выведим всЄ в WORD
            //–аспечатаем служебную записку
            string filName = System.Windows.Forms.Application.StartupPath + @"\Ўаблон\ѕисьмо на возврат.doc";


            //—оздаЄм новый Word.Application
            Microsoft.Office.Interop.Word.Application app = new Microsoft.Office.Interop.Word.Application();

            //«агружаем документ
            Microsoft.Office.Interop.Word.Document doc = null;

            object fileName = filName;
            object falseValue = false;
            object trueValue = true;
            object missing = Type.Missing;

            doc = app.Documents.Open(ref fileName, ref missing, ref trueValue,
            ref missing, ref missing, ref missing, ref missing, ref missing,
            ref missing, ref missing, ref missing, ref missing, ref missing,
            ref missing, ref missing, ref missing);

            //выведим адресат письма
            object wdrepl2 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt2 = "кому";
            object newtxt2 = (object)кому;
            //object frwd = true;
            object frwd2 = false;
            doc.Content.Find.Execute(ref searchtxt2, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd2, ref missing, ref missing, ref newtxt2, ref wdrepl2, ref missing, ref missing,
            ref missing, ref missing);

            //¬ыведим обращение ”важаемый »ван »ванович!
            object wdrepl3 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt3 = "obrashhenie";
            object newtxt3 = (object)obrashhenie;
            //object frwd = true;
            object frwd3 = false;
            doc.Content.Find.Execute(ref searchtxt3, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd3, ref missing, ref missing, ref newtxt3, ref wdrepl3, ref missing, ref missing,
            ref missing, ref missing);


            //¬ыведим количество договоров
            object wdrepl4 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt4 = "icountcontr";
            object newtxt4 = (object)iCountContr;
            //object frwd = true;
            object frwd4 = false;
            doc.Content.Find.Execute(ref searchtxt4, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd4, ref missing, ref missing, ref newtxt4, ref wdrepl4, ref missing, ref missing,
            ref missing, ref missing);

            object wdrepl5 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt5 = "num";
            object newtxt5 = (object)this.Ќомер—чЄт‘актуры;
            //object frwd = true;
            object frwd5 = false;
            doc.Content.Find.Execute(ref searchtxt5, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd5, ref missing, ref missing, ref newtxt5, ref wdrepl5, ref missing, ref missing,
            ref missing, ref missing);


            object wdrepl6 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt6 = "date";
            object newtxt6 = (object)this.ƒата–еестра;
            //object frwd = true;
            object frwd6 = false;
            doc.Content.Find.Execute(ref searchtxt6, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd6, ref missing, ref missing, ref newtxt6, ref wdrepl6, ref missing, ref missing,
            ref missing, ref missing);

            //esculap
            object wdrepl7 = WdReplace.wdReplaceAll;
            //object searchtxt = "GreetingLine";
            object searchtxt7 = "esculap";
            object newtxt7 = (object)esculap;
            //object frwd = true;
            object frwd7 = false;
            doc.Content.Find.Execute(ref searchtxt7, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd7, ref missing, ref missing, ref newtxt7, ref wdrepl7, ref missing, ref missing,
            ref missing, ref missing);


            object bookNaziv = "таблица";
            Range wrdRng = doc.Bookmarks.get_Item(ref  bookNaziv).Range;

            object behavior = Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior;
            object autobehavior = Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitWindow;

            Microsoft.Office.Interop.Word.Table table = doc.Tables.Add(wrdRng, 1, 3, ref behavior, ref autobehavior);
            table.Range.ParagraphFormat.SpaceAfter = 6;
            table.Columns[1].Width = 180;
            table.Columns[2].Width = 180;
            table.Columns[3].Width = 180;
            table.Borders.Enable = 1; // –амка - сплошна€ лини€
            table.Range.Font.Name = "Times New Roman";
            table.Range.Font.Size = 12;
             //table.Rows[1].Alignment = WdRowAlignment.wdAlignRowCenter;
            table.Rows.First.Alignment = WdRowAlignment.wdAlignRowCenter;
            
            //счЄтчик строк
            int i = 1;

            //—писок дл€ хранени€ данных дл€ таблицы
            List<ReestrNoPrintDog> listItem = new List<ReestrNoPrintDog>();

            //хранит список данных дл€ договора
            List<TabLetter> list = new List<TabLetter>();

            //—формируем шапку таблицы
            TabLetter шапка = new TabLetter();
            шапка.‘»ќ = "‘»ќ льготника";
            шапка.”слугаƒоговор = "ѕроект договора";
            шапка.”слугајкт = "јкт выполненных работ";

            list.Add(шапка);

  

            //ѕодготовим данные дл€ таблицы
            foreach (DisplayReestr item in listReestr)
            {
                int iCount = 0;

                bool flagError = false;
                if (item.ErrorPerson == true)
                {
                    flagError = true;
                }

                //ѕолучим список ошибок
                List<ErrorsReestrUnload> unRest = item.—писокќшибок;
                foreach (ErrorsReestrUnload eru in unRest)
                {
                    //письмо содержит расхождение в договоре с актом
                    TabLetter tLet = new TabLetter();

                    //получим ‘»ќ льготника
                    ReestrControl льготник = item.Ћьготник;
                    string фио = льготник.‘»ќ;
                    //«аполним ‘»ќ льготника только при первой итерации по списку ошибок
                    if (iCount == 0)
                    {
                        tLet.‘»ќ = фио;

                        string услуга = string.Empty;
                        string количество = string.Empty;
                        string сумма = string.Empty;

                        //ѕодготовим данные по договору дл€ записи в одну строку
                        if (eru.Ќаименование”слуги != null)
                        {
                            услуга = eru.Ќаименование”слуги.ToString().Trim();
                        }
                        else
                        {
                            услуга = "";
                        }

                        if (eru. оличество != null)
                        {
                            количество = eru. оличество.ToString().Trim();
                        }

                        if (eru.—умма != null)
                        {
                            сумма = eru.—умма.ToString("c").Trim();
                            if (сумма == "0,00р.")
                            {
                                //сумма = "_______";
                                сумма = "";
                            }
                        }
                        else
                        {
                            сумма = "";
                        }


                        string услугаƒоговор = услуга + " " + сумма;

                        //запишем данные по договору
                        tLet.”слугаƒоговор = услугаƒоговор.Trim();

                        string услуга2 = string.Empty;
                        string количество2 = string.Empty;
                        string сумма2 = string.Empty;

                        //ѕодготовим данные по акту дл€ записи
                        if (eru.ErrorЌаименование”слуги != null)
                        {
                            услуга2 = eru.ErrorЌаименование”слуги.ToString().Trim();

                        }
                        else
                        {
                            услуга2 = "";
                        }

                        if (eru.ќшибка оличество != null)
                        {
                            количество2 = eru.ќшибка оличество.ToString().Trim();
                        }

                        if (eru.Error—умма != null)
                        {
                            сумма2 = eru.Error—умма.ToString("c").Trim();
                            if (сумма2 == "0,00р.")
                            {
                                //сумма2 = "_______";
                                сумма2 = "";
                            }
                        }
                        else
                        {
                            сумма2 = "";
                        }
                        
                        //string услугаƒоговор2 = услуга2 + " " + количество2 + " " + сумма2;
                        string услугаƒоговор2 = услуга2 + " " + сумма2;

                        //если ошибка в персональных данных
                        if (item.ErrorPerson == true)
                        {
                            услугаƒоговор2 += "»зменены данные по льготнику";
                        }
                                

                        tLet.”слугајкт = услугаƒоговор2;
                    }
                    else
                    {
                        //в ‘»ќ записываем пустую строку
                        tLet.‘»ќ = "";

                        string услуга = string.Empty;
                        string количество = string.Empty;
                        string сумма = string.Empty;

                        //ѕодготовим данные по договору дл€ записи в одну строку
                        if (eru.Ќаименование”слуги != null)
                        {
                            услуга = eru.Ќаименование”слуги.ToString().Trim();
                        }
                        else
                        {
                            услуга = "";
                        }

                        if (eru. оличество != null)
                        {
                            количество = eru. оличество.ToString().Trim();
                        }

                        if (eru.—умма != null)
                        {
                            сумма = eru.—умма.ToString("c").Trim();
                            if (сумма == "0,00р.")
                            {
                                //сумма = "_______";
                                сумма = "";
                            }

                        }
                        else
                        {
                            сумма = "";
                        }


                        string услугаƒоговор = услуга + " " + сумма;

                        //запишем данные по договору
                        tLet.”слугаƒоговор = услугаƒоговор.Trim();

                        string услуга2 = string.Empty;
                        string количество2 = string.Empty;
                        string сумма2 = string.Empty;

                        //ѕодготовим данные по акту дл€ записи
                        if (eru.ErrorЌаименование”слуги != null)
                        {
                            услуга2 = eru.ErrorЌаименование”слуги.ToString().Trim();
                        }
                        else
                        {
                            услуга2 = "";
                        }

                        if (eru.ќшибка оличество != null)
                        {
                            количество2 = eru.ќшибка оличество.ToString().Trim();
                        }


                        if (eru.Error—умма != null)
                        {
                            сумма2 = eru.Error—умма.ToString("c").Trim();
                            if (сумма2 == "0,00р.")
                            {
                                сумма2 = "";
                            }
                        }
                        else
                        {
                            сумма2 = "";
                        }

                        //string услугаƒоговор2 = услуга2 + " " + количество2 + " " + сумма2;
                        string услугаƒоговор2 = услуга2 + " " + сумма2;
                        tLet.”слугајкт = услугаƒоговор2;
                    }

                    list.Add(tLet);

                    iCount++;
                }
            }

            List<TabLetter> iTest = list;

            int k = 1;

            //запишем данные в таблицу
            foreach (TabLetter item in list)
            {
                table.Cell(k, 1).Range.Text = item.‘»ќ.Trim();
                table.Cell(k, 2).Range.Text = item.”слугаƒоговор.Trim();
                table.Cell(k, 3).Range.Text = item.”слугајкт.Trim();


                //doc.Words.Count.ToString();
                Object beforeRow1 = Type.Missing;
                table.Rows.Add(ref beforeRow1);

                k++;
            }

            table.Rows[k].Delete();

            //¬ыровним первую строку по центру
            //table.Rows[1].Alignment = WdRowAlignment.wdAlignRowCenter;

            //ќтобразим документ
            app.Visible = true;

        }

        private void numReestr_Click(object sender, EventArgs e)
        {
                FormReestr formR = new FormReestr();
                formR.ShowDialog();

                if (formR.DialogResult == DialogResult.OK)
                {
                    this.Ќомер—чЄт‘актуры = formR.Ќомер—чЄт‘актуры.Trim();
                    this.Ќомер–еестра = formR.Ќомер–еестра.Trim();
                    this.ƒата–еестра = formR.ƒата–еестра.Trim();
                    this.ƒата—чЄт‘актуры = formR.ƒата—чЄт‘актуры.Trim();

                    this.btnSlRead.Enabled = true;
                    this.btnReturnReestr.Enabled = true;
                    this.btnSave.Enabled = true;
                }

        }

        private void dataGridView1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            MessageBox.Show("Test Message");
        }
    }
}